#!/bin/bash
# 
# git-xflow -- An extension to git-flow, which automatize
# some usual tasks related to repository operations.
#
# Feel free to contribute to this project at:
#    https://github.com/golflima/git-xflow
# git-flow : http://github.com/nvie/gitflow
#
# Copyright 2016 Jérémy Walther (jeremy.walther@golflima.net).
#
# This file is part of git-xflow.
#
# git-xflow is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# git-xflow is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
# 
# You should have received a copy of the GNU Lesser General Public License
# along with git-xflow. If not, see <http://www.gnu.org/licenses/>

############## Installer configuration ##############

NAME="<%= patch_name %>" <%# Gets the name of the patch, to retrieve all its related files #%>
GITXFLOW_VERSION="<%= GITXFLOW_VERSION %>" <%# Gets the version of git-xflow used to generated the patch #%>
<%@ generated_file_suffix="_install.sh" %> <%# Adds a specific suffix to the name of the generated file #%>


############## Constants ##############

# Colors
NC='\033[0m'
BLACK='\033[0;30m';         DARK_GRAY='\033[1;30m'
RED='\033[0;31m';           LIGHT_RED='\033[1;31m'
GREEN='\033[0;32m';         LIGHT_GREEN='\033[1;32m'
BROWN='\033[0;33m';         YELLOW='\033[1;33m'
BLUE='\033[0;34m';          LIGHT_BLUE='\033[1;34m'
PURPLE='\033[0;35m';        LIGHT_PURPLE='\033[1;35m'
CYAN='\033[0;36m';          LIGHT_CYAN='\033[1;36m'
LIGHT_GRAY='\033[0;37m';    WHITE='\033[1;37m'



############## General functions ##############

# Displays trace information message $@ in dark gray
trace() { echo -e "${DARK_GRAY}$@${NC}"; }

# Displays information message $@ in light blue
info() { echo -e "${LIGHT_BLUE}$@${NC}"; }

# Displays success message $@ in green
success() { echo -e "${GREEN}$@${NC}"; }

# Displays warning message $@ in brown/orange (overriden from gitflow-common)
warn() { echo -e "${BROWN}$@${NC}" >&2; }

# Ends the execution, and displays $@ in bold red (overriden from gitflow-common)
die() { warn "${LIGHT_RED}$@"; exit 1; }

# Ends the execution, and displays a last message ($@ if set, 'Done.' otherwise)
end() { [ -z "$@" ] && echo -e "${GREEN}Done.${NC}" || echo -e "${GREEN}$@${NC}"; exit 0; }

# Ends the execution if given command $1 returns an error and displays debug information. Usage: assertok "command" $LINENO
assertok() { ! $1 && warn "${LIGHT_RED}fatal: git-xflow v$GITXFLOW_VERSION, line $2, following command failed (err: $?):" && die "$1"; }



############## Main ##############

info "Applying patch $name ..."
[ -f "$name.log" ] || die "File '$name.log' not found"
[ -f "$name.zip" ] || die "File '$name.zip' not found"
patch_diff="$(<$name.log)"
trace "${patch_diff}"
info "Copying new and modified files ..."
assertok "unzip $name.zip" $LINENO
deleted_files="$(echo "${patch_diff}" | grep ^D | cut -f2)"
[ -n "${deleted_files}" ] && info "Removing deleted files ..." && assertok "rm -i ${deleted_files}" $LINENO
end